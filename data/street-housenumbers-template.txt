// Append e.g. '[date:"2015-01-06T00:00:00Z"]' after '[timeout:425]' if you
// want to get a historical result.
[out:csv(::id, "addr:street","addr:housenumber", "addr:postcode", "addr:housename", "addr:conscriptionnumber", "addr:flats", "addr:floor", "addr:door", "addr:unit", name)]  [timeout:425];
// Use overpass-turbo to map the area name to its ID.
//
// 360@RELATION@ = @RELATION@ + 3600000000 (3600000000 == relation), see js/ide.js
// in https://github.com/tyrasd/overpass-turbo
//
area(360@RELATION@)->.searchArea;
(
  node["addr:street"](area.searchArea);
  way["addr:street"](area.searchArea);
  relation["addr:street"](area.searchArea);
  
  node["addr:housenumber"](area.searchArea);
  way["addr:housenumber"](area.searchArea);
  relation["addr:housenumber"](area.searchArea);

  node["addr:postcode"](area.searchArea);
  way["addr:postcode"](area.searchArea);
  relation["addr:postcode"](area.searchArea);

  node["addr:housename"](area.searchArea);
  way["addr:housename"](area.searchArea);
  relation["addr:housename"](area.searchArea);

  node["addr:conscriptionnumber"](area.searchArea);
  way["addr:conscriptionnumber"](area.searchArea);
  relation["addr:conscriptionnumber"](area.searchArea);

  node["addr:flats"](area.searchArea);
  way["addr:flats"](area.searchArea);
  relation["addr:flats"](area.searchArea);

  node["addr:floor"](area.searchArea);
  way["addr:floor"](area.searchArea);
  relation["addr:floor"](area.searchArea);

  node["addr:door"](area.searchArea);
  way["addr:door"](area.searchArea);
  relation["addr:door"](area.searchArea);

  node["addr:unit"](area.searchArea);
  way["addr:unit"](area.searchArea);
  relation["addr:unit"](area.searchArea);
);
out body;
// vim: ft=javascript
